{"version":3,"sources":["../../src/js/timestamps.js"],"names":["updateTime","elem","ts","dataset","timestamp","undefined","date","Date","now","difference","console","log","seconds","minutes","hours","days","weeks","months","years","rtf","Intl","RelativeTimeFormat","val","period","Math","abs","format","trunc","title","DateTimeFormat","day","month","year","hour","minute","innerHTML","updateAllTimes","document","getElementsByClassName","setInterval"],"mappings":"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","sourcesContent":["(function() {\n  function updateTime(elem) {\n    const ts = elem.dataset.timestamp;\n    if (ts === undefined) {\n      return;\n    }\n\n    const date = new Date(ts);\n    const now = new Date();\n\n    var difference = date - now;\n    difference /= 1000;\n\n    console.log(`difference: ${difference}`)\n\n    var seconds = difference % 60;\n    console.log(`seconds: ${seconds}`);\n    difference /= 60;\n\n    const minutes = difference % 60;\n    console.log(`minutes: ${minutes}`);\n    difference /= 60;\n\n    const hours = difference % 24;\n    console.log(`hours: ${hours}`);\n    difference /= 24;\n\n    const days = difference % 7;\n    console.log(`days: ${days}`);\n    difference /= 7;\n\n    const weeks = difference % 4;\n    console.log(`weeks: ${weeks}`);\n    difference /= 4;\n\n    const months = difference % 12;\n    console.log(`months: ${months}`);\n    difference /= 12;\n\n    const years = difference;\n    console.log(`years: ${years}`);\n\n    const rtf = new Intl.RelativeTimeFormat();\n    var val, period;\n    if (Math.abs(years) >= 1) {\n      val = years;\n      period = 'years';\n    } else if (Math.abs(months) >= 1) {\n      val = months;\n      period = 'months';\n    } else if (Math.abs(weeks) >= 1) {\n      val = weeks;\n      period = 'weeks';\n    } else if (Math.abs(days) >= 1) {\n      val = days;\n      period = 'days';\n    } else if (Math.abs(hours) >= 1) {\n      val = hours;\n      period = 'hours';\n    } else if (Math.abs(minutes) >= 1) {\n      val = minutes;\n      period = 'minutes';\n    } else {\n      if (Math.abs(seconds) < 1) {\n        seconds = difference < 0 ? -1 : 1;\n      }\n      val = seconds;\n      period = 'seconds';\n    }\n\n    val = rtf.format(Math.trunc(val), period);\n\n    const title = new Intl.DateTimeFormat(undefined, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format(date);\n\n    elem.innerHTML = val;\n    elem.title = title;\n  }\n\n  function updateAllTimes() {\n    for (const ts of document.getElementsByClassName('timestamp')) {\n      updateTime(ts);\n    }\n  }\n\n  (function() {\n    updateAllTimes();\n\n    setInterval(updateAllTimes, 60 * 1000);\n  })();\n})();\n"],"file":"timestamps.js"}