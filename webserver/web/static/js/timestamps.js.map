{"version":3,"sources":["../../src/js/timestamps.js"],"names":["updateTime","elem","ts","dataset","timestamp","undefined","date","Date","now","difference","seconds","minutes","hours","days","weeks","months","years","rtf","Intl","RelativeTimeFormat","val","period","format","Math","floor","title","DateTimeFormat","day","month","year","hour","minute","innerHTML","updateAllTimes","document","getElementsByClassName","setInterval"],"mappings":"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","sourcesContent":["(function() {\n  function updateTime(elem) {\n    const ts = elem.dataset.timestamp;\n    if (ts === undefined) {\n      return;\n    }\n\n    const date = new Date(ts);\n    const now = new Date();\n\n    var difference = date - now;\n    difference /= 1000;\n\n    var seconds = difference % 60;\n    difference /= 60;\n\n    const minutes = difference % 60;\n    difference /= 60;\n\n    const hours = difference % 60;\n    difference /= 60;\n\n    const days = difference % 24;\n    difference /= 24;\n\n    const weeks = difference % 7;\n    difference /= 7;\n\n    const months = difference % 4;\n    difference /= 4;\n\n    const years = difference % 12;\n\n    const rtf = new Intl.RelativeTimeFormat();\n    var val, period;\n    if (years <= -1) {\n      val = years;\n      period = 'years';\n    } else if (months <= -1) {\n      val = months;\n      period = 'months';\n    } else if (weeks <= -1) {\n      val = weeks;\n      period = 'weeks';\n    } else if (days <= -1) {\n      val = days;\n      period = 'days';\n    } else if (hours <= -1) {\n      val = hours;\n      period = 'hours';\n    } else if (minutes <= -1) {\n      val = minutes;\n      period = 'minutes';\n    } else {\n      if (seconds > -1) {\n        seconds = -1;\n      }\n      val = seconds;\n      period = 'seconds';\n    }\n\n    val = rtf.format(Math.floor(val), period);\n\n    const title = new Intl.DateTimeFormat(undefined, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }).format(date);\n\n    elem.innerHTML = val;\n    elem.title = title;\n  }\n\n  function updateAllTimes() {\n    for (const ts of document.getElementsByClassName('timestamp')) {\n      updateTime(ts);\n    }\n  }\n\n  (function() {\n    updateAllTimes();\n\n    setInterval(updateAllTimes, 60 * 1000);\n  })();\n})();\n"],"file":"timestamps.js"}