{"version":3,"sources":["../../src/js/highlight.js"],"names":["getSuffixFromName","name","split","pop","pre","id","title","document","getElementById","suffix","lang","innerText","trim","classes","hljs","getLanguage","undefined","push","clazz","classList","add","cont","some","e","startsWith","highlightBlock","contains","lineNumbersBlock","singleLine","getElementsByTagName"],"mappings":";;;;AAAA;;AAEA,CAAC,YAAW;AACV,WAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,QAAIA,SAAS,gBAAb,EAA+B;AAC7B,aAAO,OAAP;AACD;;AAED,WAAOA,KAAKC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACD;;AAPS,6BASCC,GATD;AAUR,KAAC,YAAW;AACV,UAAIA,IAAIC,EAAJ,KAAW,EAAf,EAAmB;AACjB;AACD;AACD,UAAMC,QAAQC,SAASC,cAAT,CAA2BJ,IAAIC,EAA/B,YAAd;AACA,UAAIC,UAAU,IAAd,EAAoB;AAClB;AACD;AACD,UAAIG,eAAJ;AACA,UAAIL,IAAIM,IAAR,EAAc;AACZD,iBAASL,IAAIM,IAAb;AACD,OAFD,MAEO;AACLD,iBAAST,kBAAkBM,MAAMK,SAAN,CAAgBC,IAAhB,EAAlB,CAAT;AACD;AACD,UAAMC,UAAU,EAAhB;AACA,UAAIC,KAAKC,WAAL,CAAiBN,MAAjB,MAA6BO,SAAjC,EAA4C;AAC1CH,gBAAQI,IAAR,CAAa,cAAb;AACAJ,gBAAQI,IAAR,CAAa,MAAb;AACD,OAHD,MAGO;AACLJ,gBAAQI,IAAR,eAAyBR,MAAzB;AACD;AApBS;AAAA;AAAA;;AAAA;AAqBV,8BAAoBI,OAApB,mIAA6B;AAAA,cAAlBK,KAAkB;;AAC3Bd,cAAIe,SAAJ,CAAcC,GAAd,CAAkBF,KAAlB;AACD;AAvBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBX,KAxBD;;AA0BA,QAAMG,OAAO,6BAAIjB,IAAIe,SAAR,GAAmBG,IAAnB,CAAwB;AAAA,aAAKC,MAAM,MAAN,IAAgBA,EAAEC,UAAF,CAAa,WAAb,CAArB;AAAA,KAAxB,CAAb;;AAEA,QAAI,CAACH,IAAL,EAAW;AACT;AACD;;AAEDP,SAAKW,cAAL,CAAoBrB,GAApB;;AAEA,QAAIA,IAAIe,SAAJ,CAAcO,QAAd,CAAuB,aAAvB,CAAJ,EAA2C;AACzCZ,WAAKa,gBAAL,CAAsBvB,GAAtB,EAA2B;AACzBwB,oBAAY;AADa,OAA3B;AAGD;AAhDO;;AAAA;AAAA;AAAA;;AAAA;AASV,yBAAkBrB,SAASsB,oBAAT,CAA8B,KAA9B,CAAlB,8HAAwD;AAAA,UAA7CzB,GAA6C;;AAAA,uBAA7CA,GAA6C;;AAAA,+BA8BpD;AAUH;AAjDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDX,CAlDD","file":"highlight.js","sourcesContent":["/* global hljs:false */\n\n(function() {\n  function getSuffixFromName(name) {\n    if (name === 'CMakeLists.txt') {\n      return 'CMake';\n    }\n\n    return name.split('.').pop();\n  }\n\n  for (const pre of document.getElementsByTagName('pre')) {\n    (function() {\n      if (pre.id === '') {\n        return;\n      }\n      const title = document.getElementById(`${pre.id}-title`);\n      if (title === null) {\n        return;\n      }\n      let suffix;\n      if (pre.lang) {\n        suffix = pre.lang;\n      } else {\n        suffix = getSuffixFromName(title.innerText.trim());\n      }\n      const classes = [];\n      if (hljs.getLanguage(suffix) === undefined) {\n        classes.push('no-highlight');\n        classes.push('hljs');\n      } else {\n        classes.push(`language-${suffix}`);\n      }\n      for (const clazz of classes) {\n        pre.classList.add(clazz);\n      }\n    })();\n\n    const cont = [...pre.classList].some(e => e === 'hljs' || e.startsWith('language-'));\n\n    if (!cont) {\n      continue;\n    }\n\n    hljs.highlightBlock(pre);\n\n    if (pre.classList.contains('file-source')) {\n      hljs.lineNumbersBlock(pre, {\n        singleLine: true,\n      });\n    }\n  }\n})();\n"]}