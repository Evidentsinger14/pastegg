{"version":3,"sources":["../../src/js/highlight.js"],"names":["getSuffixFromName","name","split","pop","pre","id","title","document","getElementById","suffix","lang","innerText","trim","classes","hljs","getLanguage","undefined","push","clazz","classList","add","cont","some","e","startsWith","highlightBlock","contains","lineNumbersBlock","singleLine","getElementsByTagName"],"mappings":";;;;;;;;;;AAAA;AAEA,CAAC,YAAW;AACV,WAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,QAAIA,IAAI,KAAK,gBAAb,EAA+B;AAC7B,aAAO,OAAP;AACD;;AAED,WAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACD;;AAPS;AAAA;AAAA;;AAAA;AAAA;AAAA,UASCC,GATD;;AAUR,OAAC,YAAW;AACV,YAAIA,GAAG,CAACC,EAAJ,KAAW,EAAf,EAAmB;AACjB;AACD;;AACD,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,WAA2BJ,GAAG,CAACC,EAA/B,YAAd;;AACA,YAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB;AACD;;AACD,YAAIG,MAAJ;;AACA,YAAIL,GAAG,CAACM,IAAR,EAAc;AACZD,UAAAA,MAAM,GAAGL,GAAG,CAACM,IAAb;AACD,SAFD,MAEO;AACLD,UAAAA,MAAM,GAAGT,iBAAiB,CAACM,KAAK,CAACK,SAAN,CAAgBC,IAAhB,EAAD,CAA1B;AACD;;AACD,YAAMC,OAAO,GAAG,EAAhB;;AACA,YAAIC,IAAI,CAACC,WAAL,CAAiBN,MAAjB,MAA6BO,SAAjC,EAA4C;AAC1CH,UAAAA,OAAO,CAACI,IAAR,CAAa,cAAb;AACAJ,UAAAA,OAAO,CAACI,IAAR,CAAa,MAAb;AACD,SAHD,MAGO;AACLJ,UAAAA,OAAO,CAACI,IAAR,oBAAyBR,MAAzB;AACD;;AACD,oCAAoBI,OAApB,8BAA6B;AAAxB,cAAMK,KAAK,eAAX;AACHd,UAAAA,GAAG,CAACe,SAAJ,CAAcC,GAAd,CAAkBF,KAAlB;AACD;AACF,OAxBD;;AA0BA,UAAMG,IAAI,GAAG,mBAAIjB,GAAG,CAACe,SAAR,EAAmBG,IAAnB,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,KAAK,MAAN,IAAgBA,CAAC,CAACC,UAAF,CAAa,WAAb,CAApB;AAAA,OAAzB,CAAb;;AAEA,UAAI,CAACH,IAAL,EAAW;AACT;AACD;;AAEDP,MAAAA,IAAI,CAACW,cAAL,CAAoBrB,GAApB;;AAEA,UAAIA,GAAG,CAACe,SAAJ,CAAcO,QAAd,CAAuB,aAAvB,CAAJ,EAA2C;AACzCZ,QAAAA,IAAI,CAACa,gBAAL,CAAsBvB,GAAtB,EAA2B;AACzBwB,UAAAA,UAAU,EAAE;AADa,SAA3B;AAGD;AAhDO;;AASV,yBAAkBrB,QAAQ,CAACsB,oBAAT,CAA8B,KAA9B,CAAlB,8HAAwD;AAAA;;AAAA,+BA8BpD;AAUH;AAjDS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDX,CAlDD","sourcesContent":["/* global hljs:false */\n\n(function() {\n  function getSuffixFromName(name) {\n    if (name === 'CMakeLists.txt') {\n      return 'CMake';\n    }\n\n    return name.split('.').pop();\n  }\n\n  for (const pre of document.getElementsByTagName('pre')) {\n    (function() {\n      if (pre.id === '') {\n        return;\n      }\n      const title = document.getElementById(`${pre.id}-title`);\n      if (title === null) {\n        return;\n      }\n      let suffix;\n      if (pre.lang) {\n        suffix = pre.lang;\n      } else {\n        suffix = getSuffixFromName(title.innerText.trim());\n      }\n      const classes = [];\n      if (hljs.getLanguage(suffix) === undefined) {\n        classes.push('no-highlight');\n        classes.push('hljs');\n      } else {\n        classes.push(`language-${suffix}`);\n      }\n      for (const clazz of classes) {\n        pre.classList.add(clazz);\n      }\n    })();\n\n    const cont = [...pre.classList].some(e => e === 'hljs' || e.startsWith('language-'));\n\n    if (!cont) {\n      continue;\n    }\n\n    hljs.highlightBlock(pre);\n\n    if (pre.classList.contains('file-source')) {\n      hljs.lineNumbersBlock(pre, {\n        singleLine: true,\n      });\n    }\n  }\n})();\n"],"file":"highlight.js"}