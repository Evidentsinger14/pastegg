{"version":3,"sources":["../../src/js/editor.js"],"names":["pasteNum","pasteEditors","createUpload","getLanguage","parent","lang","querySelector","value","files","Object","values","editor","editorRoot","parentElement","file","getCode","id","push","codeFlaskSucksHighlight","hljs","highlightBlock","elCode","classList","clazz","startsWith","remove","setUpEditor","el","div","document","createElement","style","height","CodeSass","defaultTheme","lineNumbers","language","hidden","type","name","insertAdjacentElement","background","padding","setHighlightCallback","nameInput","langInput","updateLanguage","suffix","split","pop","undefined","updateCode","code","addEventListener","createLineNumbers","toDelete","removeFile","addFile","base","getElementById","clone","cloneNode","getElementsByTagName","ta","updateButtons","num","keys","length","enabled","getElementsByName","button","disabled","createEditors","querySelectorAll","input","JSON","stringify","e","target","appendChild"],"mappings":"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","file":"editor.js","sourcesContent":["/* global hljs:false, CodeSass:false */\n\nlet pasteNum = 0;\nconst pasteEditors = {};\n\n(function() {\n  /**\n   * Create the upload array for handling multiple files.\n   *\n   * @returns {[{name: string, language: string, content: string}]} Array of upload files.\n   */\n  function createUpload() {\n    function getLanguage(parent) {\n      const lang = parent.querySelector('select[name=file_language]').value;\n      if (lang === '') {\n        return null;\n      }\n      return lang;\n    }\n\n    const files = [];\n    for (const editor of Object.values(pasteEditors)) {\n      const parent = editor.editorRoot.parentElement.parentElement.parentElement;\n      const file = {\n        'name': parent.querySelector('input[name=file_name]').value,\n        'language': getLanguage(parent),\n        'content': editor.getCode(),\n      };\n      const id = editor.editorRoot.parentElement.parentElement.parentElement.querySelector('input[name=id]');\n      if (id !== null) {\n        file.id = id.value;\n      }\n      files.push(file);\n    }\n    return files;\n  }\n\n  function codeFlaskSucksHighlight(editor) {\n    hljs.highlightBlock(editor.elCode);\n    // remove the extra classes hljs adds without asking\n    for (const clazz of editor.elCode.classList) {\n      if (clazz !== 'hljs' && clazz !== 'codeflask__code' && !clazz.startsWith('language-')) {\n        editor.elCode.classList.remove(clazz);\n      }\n    }\n  }\n\n  /**\n   * Create an editor.\n   *\n   * @param {HTMLElement} parent The file container.\n   * @param {HTMLElement} el The element to convert into an editor.\n   */\n  function setUpEditor(parent, el) {\n    const div = document.createElement('div');\n\n    div.style.height = '400px';\n\n    const editor = new CodeSass(div, {\n      defaultTheme: false,\n      lineNumbers: true,\n      language: 'plaintext',\n    });\n\n    const hidden = document.createElement('input');\n    hidden.type = 'hidden';\n    hidden.name = 'file_content';\n    hidden.id = 'hidden_content';\n    editor.editorRoot.insertAdjacentElement('afterend', hidden);\n\n    editor.elCode.style.background = 'none';\n    editor.elCode.style.padding = '0';\n\n    editor.setHighlightCallback(codeFlaskSucksHighlight);\n\n    const nameInput = parent.querySelector('input[name=file_name]');\n    const langInput = parent.querySelector('select[name=file_language]');\n\n    function updateLanguage() {\n      let suffix;\n      if (langInput.value !== '') {\n        suffix = langInput.value;\n      } else if (nameInput.value !== '') {\n        suffix = nameInput.value.split('.').pop();\n      }\n      const lang = hljs.getLanguage(suffix) !== undefined ? suffix : 'plaintext';\n      editor.updateLanguage(lang);\n      editor.updateCode(editor.code);\n    }\n\n    nameInput.addEventListener('input', updateLanguage);\n    langInput.addEventListener('change', updateLanguage);\n\n    updateLanguage();\n    editor.updateCode(el.value);\n    editor.createLineNumbers(); // TODO: fix this in codesass\n\n    const toDelete = pasteNum;\n    parent\n      .querySelector('button[name=delete_button]')\n      .addEventListener('click', () => removeFile(toDelete));\n\n    pasteEditors[pasteNum] = editor;\n\n    el.insertAdjacentElement('beforebegin', div);\n    el.remove();\n  }\n\n  function addFile() {\n    // get the base file for cloning (should be invisible if JS is running)\n    const base = document.getElementById('base_file');\n\n    // deep clone the base\n    const clone = base.cloneNode(true);\n\n    // show the editor by removing the requires-no-js class that was on the base\n    clone.classList.remove('requires-no-js');\n\n    pasteNum += 1;\n    clone.id = `file${pasteNum}`;\n\n    // set up an editor for each textarea in the base (should only be one)\n    for (const ta of clone.getElementsByTagName('textarea')) {\n      setUpEditor(clone, ta);\n    }\n\n    // add the editor to the dom\n    document.getElementById('end_of_files').insertAdjacentElement('beforebegin', clone);\n\n    updateButtons();\n  }\n\n  /**\n   * Remove a file. Will never remove the last file.\n   *\n   * @param {Number} num The number of the file to remove.\n   */\n  function removeFile(num) {\n    if (Object.keys(pasteEditors).length === 1) {\n      return;\n    }\n\n    const file = document.getElementById(`file${num}`);\n\n    if (file === null) {\n      return;\n    }\n\n    delete pasteEditors[num];\n\n    file.remove();\n\n    updateButtons();\n  }\n\n  function updateButtons() {\n    const enabled = Object.keys(pasteEditors).length > 1;\n    for (const button of document.getElementsByName('delete_button')) {\n      if (enabled) {\n        button.disabled = false;\n      } else {\n        button.disabled = true;\n      }\n    }\n  }\n\n  function createEditors() {\n    for (const editor of document.querySelectorAll('textarea.editor')) {\n      pasteNum += 1;\n      setUpEditor(editor.parentElement.parentElement.parentElement, editor);\n    }\n    updateButtons();\n  }\n\n  document.getElementById('add_file').addEventListener('click', addFile);\n\n  document.getElementById('paste_upload').addEventListener('submit', e => {\n    const input = document.createElement('input');\n    input.type = 'hidden';\n    input.value = JSON.stringify(createUpload());\n    input.name = 'upload_json';\n\n    e.target.appendChild(input);\n  });\n\n  // create any initial editors\n  createEditors();\n\n  // add an initial file if necessary\n  if (Object.keys(pasteEditors).length === 0) {\n    addFile();\n  }\n})();\n"]}