{"version":3,"sources":["../../src/js/paste.js"],"names":["openModal","document","getElementById","classList","add","closeModal","remove","getElementsByClassName","forEach","e","addEventListener","swap","current","currentContent","next","nextContent","tabsContainer","fileId","dataset","id","tabLinks","rendered","querySelector","renderedA","firstChild","source","sourceA","renderedContent","sourceContent","getDeletionKeys","keys","localStorage","getItem","JSON","parse","setDeletionKeys","setItem","stringify","dkElem","deletionKey","innerText","pasteId","expires","Date","getTime","dkInput","key","undefined","value","deletionForm","Object","entries","querySelectorAll","pre","lang"],"mappings":"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","file":"paste.js","sourcesContent":["(function() {\n  function openModal() {\n    document.getElementById('deletion_modal').classList.add('is-active');\n  }\n\n  function closeModal() {\n    document.getElementById('deletion_modal').classList.remove('is-active');\n  }\n\n  [...document.getElementsByClassName('opens-modal')].forEach(e => e.addEventListener('click', openModal));\n\n  [...document.getElementsByClassName('closes-modal')].forEach(e => e.addEventListener('click', closeModal));\n\n  function swap(current, currentContent, next, nextContent) {\n    current.classList.remove('is-active');\n    next.classList.add('is-active');\n\n    currentContent.classList.add('is-not-displayed');\n    nextContent.classList.remove('is-not-displayed');\n  }\n\n  for (const tabsContainer of document.getElementsByClassName('paste-tabs-container')) {\n    const fileId = tabsContainer.dataset.id;\n    const tabLinks = document.getElementById(`${fileId}-tab-links`);\n\n    const rendered = tabLinks.querySelector('.paste-rendered-tab');\n    const renderedA = rendered.firstChild;\n\n    const source = tabLinks.querySelector('.paste-source-tab');\n    const sourceA = source.firstChild;\n\n    const renderedContent = tabsContainer.querySelector('div.paste-rendered-content');\n    const sourceContent = tabsContainer.querySelector('div.paste-source-content');\n\n    renderedA.addEventListener('click', () => swap(source, sourceContent, rendered, renderedContent));\n    sourceA.addEventListener('click', () => swap(rendered, renderedContent, source, sourceContent));\n  }\n\n  function getDeletionKeys() {\n    let keys = localStorage.getItem('deletion_keys');\n\n    if (keys === null) {\n      keys = {};\n    } else {\n      keys = JSON.parse(keys);\n    }\n\n    return keys;\n  }\n\n  function setDeletionKeys(keys) {\n    localStorage.setItem('deletion_keys', JSON.stringify(keys));\n  }\n\n  // check if the page is displaying a deletion key and add it to local storage\n  (function() {\n    const dkElem = document.getElementById('deletion_key');\n\n    if (dkElem === null) {\n      return;\n    }\n\n    const deletionKey = dkElem.innerText;\n\n    const keys = getDeletionKeys();\n\n    const pasteId = dkElem.dataset.pasteId;\n\n    keys[pasteId] = {\n      deletionKey,\n      expires: new Date((new Date).getTime() + 30 * 24 * 60 * 60 * 1000),\n    };\n\n    setDeletionKeys(keys);\n  })();\n\n  // check if we have a deletion key for this paste and insert it\n  (function() {\n    const dkInput = document.getElementById('deletion_key_input');\n\n    if (dkInput === null) {\n      return;\n    }\n\n    const pasteId = dkInput.dataset.pasteId;\n\n    const keys = getDeletionKeys();\n\n    const key = keys[pasteId];\n\n    if (key === undefined) {\n      return;\n    }\n\n    dkInput.value = key.deletionKey;\n\n    // add a listener for form submit to remove key from local storage\n    const deletionForm = document.getElementById('deletion_form');\n\n    if (deletionForm === null) {\n      return;\n    }\n\n    deletionForm.addEventListener('submit', () => {\n      const keys = getDeletionKeys();\n      delete keys[pasteId];\n      setDeletionKeys(keys);\n    });\n  })();\n\n  // expire old deletion keys\n  (function() {\n    const keys = getDeletionKeys();\n\n    for (const key of Object.entries(keys)) {\n      if (new Date >= new Date(key[1].expires)) {\n        delete keys[key[0]];\n      }\n    }\n\n    setDeletionKeys(keys);\n  })();\n\n  document\n    .querySelectorAll('.paste-rendered-content pre[lang]')\n    .forEach(pre => pre.classList.add(`language-${pre.lang}`));\n})();\n"]}