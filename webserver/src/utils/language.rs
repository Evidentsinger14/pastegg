use diesel::backend::Backend;
use diesel::deserialize::{self, FromSql};
use diesel::Queryable;
use diesel::serialize::{self, ToSql};
use diesel::sql_types::Text;

use rocket::http::RawStr;
use rocket::request::FromFormValue;

use std::io::Write;

#[derive(Debug, Clone, Copy, PartialEq, Serialize, Deserialize, AsExpression)]
#[sql_type = "Text"]
#[serde(rename_all = "lowercase")]
pub enum Language {
  OneC,
  Abnf,
  AccessLog,
  ActionScript,
  Ada,
  Apache,
  AppleScript,
  Arduino,
  ArmAsm,
  AsciiDoc,
  AspectJ,
  AutoHotKey,
  AutoIt,
  AvrAsm,
  Awk,
  Axapta,
  Bash,
  Basic,
  Bnf,
  Brainfuck,
  Cal,
  CapnProto,
  Ceylon,
  Clean,
  Clojure,
  ClojureRepl,
  Cmake,
  CoffeeScript,
  Coq,
  Cos,
  CPlusPlus,
  Crmsh,
  Crystal,
  CSharp,
  Csp,
  Css,
  D,
  Dart,
  Delphi,
  Diff,
  Django,
  Dns,
  Dockerfile,
  Dos,
  DsConfig,
  Dts,
  Dust,
  Ebnf,
  Elixir,
  Elm,
  EmbeddedRuby,
  Erlang,
  ErlangRepl,
  Excel,
  Fix,
  Flix,
  Fortran,
  FSharp,
  Gams,
  Gauss,
  GCode,
  Gherkin,
  Glsl,
  Go,
  Golo,
  Gradle,
  Groovy,
  Haml,
  Handlebars,
  Haskell,
  Haxe,
  Hsp,
  Htmlbars,
  Http,
  Hy,
  Inform7,
  Ini,
  Irpf90,
  Java,
  JavaScript,
  JbossCli,
  Json,
  Julia,
  JuliaRepl,
  Kotlin,
  Lasso,
  Ldif,
  Leaf,
  Less,
  Lisp,
  LiveCodeServer,
  LiveScript,
  Llvm,
  LindenScriptingLanguage,
  Lua,
  Makefile,
  Markdown,
  Mathematica,
  Matlab,
  Maxima,
  Mel,
  Mercury,
  MipsAsm,
  Mizar,
  Mojolicious,
  Monkey,
  MoonScript,
  N1ql,
  Nginx,
  Nimrod,
  Nix,
  Nsis,
  ObjectiveC,
  Ocaml,
  OpenScad,
  Oxygene,
  Parser3,
  Perl,
  Pf,
  Php,
  Pony,
  PowerShell,
  Processing,
  Profile,
  Prolog,
  ProtocolBuffers,
  Puppet,
  PureBasic,
  Python,
  Q,
  Qml,
  R,
  Rib,
  Roboconf,
  RouterOs,
  Rsl,
  Ruby,
  RulesLanguage,
  Rust,
  Scala,
  Scheme,
  Scilab,
  Scss,
  Shell,
  Smali,
  Smalltalk,
  StandardMl,
  Sqf,
  Sql,
  Stan,
  Stata,
  Step21,
  Stylus,
  Subunit,
  Swift,
  TaggerScript,
  Tap,
  Tcl,
  Tex,
  Thrift,
  Tp,
  Twig,
  Typescript,
  Vala,
  VbNet,
  VbScript,
  VbScriptHtml,
  Verilog,
  Vhdl,
  Vim,
  X86Asm,
  Xl,
  Xml,
  XQuery,
  Yaml,
  Zephir,
}

impl Language {
  pub const ALL: &'static [Language] = &[
    Language::OneC,
    Language::Abnf,
    Language::AccessLog,
    Language::ActionScript,
    Language::Ada,
    Language::Apache,
    Language::AppleScript,
    Language::Arduino,
    Language::ArmAsm,
    Language::AsciiDoc,
    Language::AspectJ,
    Language::AutoHotKey,
    Language::AutoIt,
    Language::AvrAsm,
    Language::Awk,
    Language::Axapta,
    Language::Bash,
    Language::Basic,
    Language::Bnf,
    Language::Brainfuck,
    Language::Cal,
    Language::CapnProto,
    Language::Ceylon,
    Language::Clean,
    Language::Clojure,
    Language::ClojureRepl,
    Language::Cmake,
    Language::CoffeeScript,
    Language::Coq,
    Language::Cos,
    Language::CPlusPlus,
    Language::Crmsh,
    Language::Crystal,
    Language::CSharp,
    Language::Csp,
    Language::Css,
    Language::D,
    Language::Dart,
    Language::Delphi,
    Language::Diff,
    Language::Django,
    Language::Dns,
    Language::Dockerfile,
    Language::Dos,
    Language::DsConfig,
    Language::Dts,
    Language::Dust,
    Language::Ebnf,
    Language::Elixir,
    Language::Elm,
    Language::EmbeddedRuby,
    Language::Erlang,
    Language::ErlangRepl,
    Language::Excel,
    Language::Fix,
    Language::Flix,
    Language::Fortran,
    Language::FSharp,
    Language::Gams,
    Language::Gauss,
    Language::GCode,
    Language::Gherkin,
    Language::Glsl,
    Language::Go,
    Language::Golo,
    Language::Gradle,
    Language::Groovy,
    Language::Haml,
    Language::Handlebars,
    Language::Haskell,
    Language::Haxe,
    Language::Hsp,
    Language::Htmlbars,
    Language::Http,
    Language::Hy,
    Language::Inform7,
    Language::Ini,
    Language::Irpf90,
    Language::Java,
    Language::JavaScript,
    Language::JbossCli,
    Language::Json,
    Language::Julia,
    Language::JuliaRepl,
    Language::Kotlin,
    Language::Lasso,
    Language::Ldif,
    Language::Leaf,
    Language::Less,
    Language::Lisp,
    Language::LiveCodeServer,
    Language::LiveScript,
    Language::Llvm,
    Language::LindenScriptingLanguage,
    Language::Lua,
    Language::Makefile,
    Language::Markdown,
    Language::Mathematica,
    Language::Matlab,
    Language::Maxima,
    Language::Mel,
    Language::Mercury,
    Language::MipsAsm,
    Language::Mizar,
    Language::Mojolicious,
    Language::Monkey,
    Language::MoonScript,
    Language::N1ql,
    Language::Nginx,
    Language::Nimrod,
    Language::Nix,
    Language::Nsis,
    Language::ObjectiveC,
    Language::Ocaml,
    Language::OpenScad,
    Language::Oxygene,
    Language::Parser3,
    Language::Perl,
    Language::Pf,
    Language::Php,
    Language::Pony,
    Language::PowerShell,
    Language::Processing,
    Language::Profile,
    Language::Prolog,
    Language::ProtocolBuffers,
    Language::Puppet,
    Language::PureBasic,
    Language::Python,
    Language::Q,
    Language::Qml,
    Language::R,
    Language::Rib,
    Language::Roboconf,
    Language::RouterOs,
    Language::Rsl,
    Language::Ruby,
    Language::RulesLanguage,
    Language::Rust,
    Language::Scala,
    Language::Scheme,
    Language::Scilab,
    Language::Scss,
    Language::Shell,
    Language::Smali,
    Language::Smalltalk,
    Language::StandardMl,
    Language::Sqf,
    Language::Sql,
    Language::Stan,
    Language::Stata,
    Language::Step21,
    Language::Stylus,
    Language::Subunit,
    Language::Swift,
    Language::TaggerScript,
    Language::Tap,
    Language::Tcl,
    Language::Tex,
    Language::Thrift,
    Language::Tp,
    Language::Twig,
    Language::Typescript,
    Language::Vala,
    Language::VbNet,
    Language::VbScript,
    Language::VbScriptHtml,
    Language::Verilog,
    Language::Vhdl,
    Language::Vim,
    Language::X86Asm,
    Language::Xl,
    Language::Xml,
    Language::XQuery,
    Language::Yaml,
    Language::Zephir,
  ];

  pub fn as_str(&self) -> &'static str {
    match *self {
      Language::OneC => "OneC",
      Language::Abnf => "Abnf",
      Language::AccessLog => "AccessLog",
      Language::ActionScript => "ActionScript",
      Language::Ada => "Ada",
      Language::Apache => "Apache",
      Language::AppleScript => "AppleScript",
      Language::Arduino => "Arduino",
      Language::ArmAsm => "ArmAsm",
      Language::AsciiDoc => "AsciiDoc",
      Language::AspectJ => "AspectJ",
      Language::AutoHotKey => "AutoHotKey",
      Language::AutoIt => "AutoIt",
      Language::AvrAsm => "AvrAsm",
      Language::Awk => "Awk",
      Language::Axapta => "Axapta",
      Language::Bash => "Bash",
      Language::Basic => "Basic",
      Language::Bnf => "Bnf",
      Language::Brainfuck => "Brainfuck",
      Language::Cal => "Cal",
      Language::CapnProto => "CapnProto",
      Language::Ceylon => "Ceylon",
      Language::Clean => "Clean",
      Language::Clojure => "Clojure",
      Language::ClojureRepl => "ClojureRepl",
      Language::Cmake => "Cmake",
      Language::CoffeeScript => "CoffeeScript",
      Language::Coq => "Coq",
      Language::Cos => "Cos",
      Language::CPlusPlus => "CPlusPlus",
      Language::Crmsh => "Crmsh",
      Language::Crystal => "Crystal",
      Language::CSharp => "CSharp",
      Language::Csp => "Csp",
      Language::Css => "Css",
      Language::D => "D",
      Language::Dart => "Dart",
      Language::Delphi => "Delphi",
      Language::Diff => "Diff",
      Language::Django => "Django",
      Language::Dns => "Dns",
      Language::Dockerfile => "Dockerfile",
      Language::Dos => "Dos",
      Language::DsConfig => "DsConfig",
      Language::Dts => "Dts",
      Language::Dust => "Dust",
      Language::Ebnf => "Ebnf",
      Language::Elixir => "Elixir",
      Language::Elm => "Elm",
      Language::EmbeddedRuby => "EmbeddedRuby",
      Language::Erlang => "Erlang",
      Language::ErlangRepl => "ErlangRepl",
      Language::Excel => "Excel",
      Language::Fix => "Fix",
      Language::Flix => "Flix",
      Language::Fortran => "Fortran",
      Language::FSharp => "FSharp",
      Language::Gams => "Gams",
      Language::Gauss => "Gauss",
      Language::GCode => "GCode",
      Language::Gherkin => "Gherkin",
      Language::Glsl => "Glsl",
      Language::Go => "Go",
      Language::Golo => "Golo",
      Language::Gradle => "Gradle",
      Language::Groovy => "Groovy",
      Language::Haml => "Haml",
      Language::Handlebars => "Handlebars",
      Language::Haskell => "Haskell",
      Language::Haxe => "Haxe",
      Language::Hsp => "Hsp",
      Language::Htmlbars => "Htmlbars",
      Language::Http => "Http",
      Language::Hy => "Hy",
      Language::Inform7 => "Inform7",
      Language::Ini => "Ini",
      Language::Irpf90 => "Irpf90",
      Language::Java => "Java",
      Language::JavaScript => "JavaScript",
      Language::JbossCli => "JbossCli",
      Language::Json => "Json",
      Language::Julia => "Julia",
      Language::JuliaRepl => "JuliaRepl",
      Language::Kotlin => "Kotlin",
      Language::Lasso => "Lasso",
      Language::Ldif => "Ldif",
      Language::Leaf => "Leaf",
      Language::Less => "Less",
      Language::Lisp => "Lisp",
      Language::LiveCodeServer => "LiveCodeServer",
      Language::LiveScript => "LiveScript",
      Language::Llvm => "Llvm",
      Language::LindenScriptingLanguage => "LindenScriptingLanguage",
      Language::Lua => "Lua",
      Language::Makefile => "Makefile",
      Language::Markdown => "Markdown",
      Language::Mathematica => "Mathematica",
      Language::Matlab => "Matlab",
      Language::Maxima => "Maxima",
      Language::Mel => "Mel",
      Language::Mercury => "Mercury",
      Language::MipsAsm => "MipsAsm",
      Language::Mizar => "Mizar",
      Language::Mojolicious => "Mojolicious",
      Language::Monkey => "Monkey",
      Language::MoonScript => "MoonScript",
      Language::N1ql => "N1ql",
      Language::Nginx => "Nginx",
      Language::Nimrod => "Nimrod",
      Language::Nix => "Nix",
      Language::Nsis => "Nsis",
      Language::ObjectiveC => "ObjectiveC",
      Language::Ocaml => "Ocaml",
      Language::OpenScad => "OpenScad",
      Language::Oxygene => "Oxygene",
      Language::Parser3 => "Parser3",
      Language::Perl => "Perl",
      Language::Pf => "Pf",
      Language::Php => "Php",
      Language::Pony => "Pony",
      Language::PowerShell => "PowerShell",
      Language::Processing => "Processing",
      Language::Profile => "Profile",
      Language::Prolog => "Prolog",
      Language::ProtocolBuffers => "ProtocolBuffers",
      Language::Puppet => "Puppet",
      Language::PureBasic => "PureBasic",
      Language::Python => "Python",
      Language::Q => "Q",
      Language::Qml => "Qml",
      Language::R => "R",
      Language::Rib => "Rib",
      Language::Roboconf => "Roboconf",
      Language::RouterOs => "RouterOs",
      Language::Rsl => "Rsl",
      Language::Ruby => "Ruby",
      Language::RulesLanguage => "RulesLanguage",
      Language::Rust => "Rust",
      Language::Scala => "Scala",
      Language::Scheme => "Scheme",
      Language::Scilab => "Scilab",
      Language::Scss => "Scss",
      Language::Shell => "Shell",
      Language::Smali => "Smali",
      Language::Smalltalk => "Smalltalk",
      Language::StandardMl => "StandardMl",
      Language::Sqf => "Sqf",
      Language::Sql => "Sql",
      Language::Stan => "Stan",
      Language::Stata => "Stata",
      Language::Step21 => "Step21",
      Language::Stylus => "Stylus",
      Language::Subunit => "Subunit",
      Language::Swift => "Swift",
      Language::TaggerScript => "TaggerScript",
      Language::Tap => "Tap",
      Language::Tcl => "Tcl",
      Language::Tex => "Tex",
      Language::Thrift => "Thrift",
      Language::Tp => "Tp",
      Language::Twig => "Twig",
      Language::Typescript => "Typescript",
      Language::Vala => "Vala",
      Language::VbNet => "VbNet",
      Language::VbScript => "VbScript",
      Language::VbScriptHtml => "VbScriptHtml",
      Language::Verilog => "Verilog",
      Language::Vhdl => "Vhdl",
      Language::Vim => "Vim",
      Language::X86Asm => "X86Asm",
      Language::Xl => "Xl",
      Language::Xml => "Xml",
      Language::XQuery => "XQuery",
      Language::Yaml => "Yaml",
      Language::Zephir => "Zephir",
    }
  }

  pub fn from_str(input: &str) -> Option<Language> {
    let lang = match input.to_lowercase().as_str() {
      "onec" => Language::OneC,
      "abnf" => Language::Abnf,
      "accesslog" => Language::AccessLog,
      "actionscript" => Language::ActionScript,
      "ada" => Language::Ada,
      "apache" => Language::Apache,
      "applescript" => Language::AppleScript,
      "arduino" => Language::Arduino,
      "armasm" => Language::ArmAsm,
      "asciidoc" => Language::AsciiDoc,
      "aspectj" => Language::AspectJ,
      "autohotkey" => Language::AutoHotKey,
      "autoit" => Language::AutoIt,
      "avrasm" => Language::AvrAsm,
      "awk" => Language::Awk,
      "axapta" => Language::Axapta,
      "bash" => Language::Bash,
      "basic" => Language::Basic,
      "bnf" => Language::Bnf,
      "brainfuck" => Language::Brainfuck,
      "cal" => Language::Cal,
      "capnproto" => Language::CapnProto,
      "ceylon" => Language::Ceylon,
      "clean" => Language::Clean,
      "clojure" => Language::Clojure,
      "clojurerepl" => Language::ClojureRepl,
      "cmake" => Language::Cmake,
      "coffeescript" => Language::CoffeeScript,
      "coq" => Language::Coq,
      "cos" => Language::Cos,
      "cplusplus" => Language::CPlusPlus,
      "crmsh" => Language::Crmsh,
      "crystal" => Language::Crystal,
      "csharp" => Language::CSharp,
      "csp" => Language::Csp,
      "css" => Language::Css,
      "d" => Language::D,
      "dart" => Language::Dart,
      "delphi" => Language::Delphi,
      "diff" => Language::Diff,
      "django" => Language::Django,
      "dns" => Language::Dns,
      "dockerfile" => Language::Dockerfile,
      "dos" => Language::Dos,
      "dsconfig" => Language::DsConfig,
      "dts" => Language::Dts,
      "dust" => Language::Dust,
      "ebnf" => Language::Ebnf,
      "elixir" => Language::Elixir,
      "elm" => Language::Elm,
      "embeddedruby" => Language::EmbeddedRuby,
      "erlang" => Language::Erlang,
      "erlangrepl" => Language::ErlangRepl,
      "excel" => Language::Excel,
      "fix" => Language::Fix,
      "flix" => Language::Flix,
      "fortran" => Language::Fortran,
      "fsharp" => Language::FSharp,
      "gams" => Language::Gams,
      "gauss" => Language::Gauss,
      "gcode" => Language::GCode,
      "gherkin" => Language::Gherkin,
      "glsl" => Language::Glsl,
      "go" => Language::Go,
      "golo" => Language::Golo,
      "gradle" => Language::Gradle,
      "groovy" => Language::Groovy,
      "haml" => Language::Haml,
      "handlebars" => Language::Handlebars,
      "haskell" => Language::Haskell,
      "haxe" => Language::Haxe,
      "hsp" => Language::Hsp,
      "htmlbars" => Language::Htmlbars,
      "http" => Language::Http,
      "hy" => Language::Hy,
      "inform7" => Language::Inform7,
      "ini" => Language::Ini,
      "irpf90" => Language::Irpf90,
      "java" => Language::Java,
      "javascript" => Language::JavaScript,
      "jbosscli" => Language::JbossCli,
      "json" => Language::Json,
      "julia" => Language::Julia,
      "juliarepl" => Language::JuliaRepl,
      "kotlin" => Language::Kotlin,
      "lasso" => Language::Lasso,
      "ldif" => Language::Ldif,
      "leaf" => Language::Leaf,
      "less" => Language::Less,
      "lisp" => Language::Lisp,
      "livecodeserver" => Language::LiveCodeServer,
      "livescript" => Language::LiveScript,
      "llvm" => Language::Llvm,
      "lindenscriptinglanguage" => Language::LindenScriptingLanguage,
      "lua" => Language::Lua,
      "makefile" => Language::Makefile,
      "markdown" => Language::Markdown,
      "mathematica" => Language::Mathematica,
      "matlab" => Language::Matlab,
      "maxima" => Language::Maxima,
      "mel" => Language::Mel,
      "mercury" => Language::Mercury,
      "mipsasm" => Language::MipsAsm,
      "mizar" => Language::Mizar,
      "mojolicious" => Language::Mojolicious,
      "monkey" => Language::Monkey,
      "moonscript" => Language::MoonScript,
      "n1ql" => Language::N1ql,
      "nginx" => Language::Nginx,
      "nimrod" => Language::Nimrod,
      "nix" => Language::Nix,
      "nsis" => Language::Nsis,
      "objectivec" => Language::ObjectiveC,
      "ocaml" => Language::Ocaml,
      "openscad" => Language::OpenScad,
      "oxygene" => Language::Oxygene,
      "parser3" => Language::Parser3,
      "perl" => Language::Perl,
      "pf" => Language::Pf,
      "php" => Language::Php,
      "pony" => Language::Pony,
      "powershell" => Language::PowerShell,
      "processing" => Language::Processing,
      "profile" => Language::Profile,
      "prolog" => Language::Prolog,
      "protocolbuffers" => Language::ProtocolBuffers,
      "puppet" => Language::Puppet,
      "purebasic" => Language::PureBasic,
      "python" => Language::Python,
      "q" => Language::Q,
      "qml" => Language::Qml,
      "r" => Language::R,
      "rib" => Language::Rib,
      "roboconf" => Language::Roboconf,
      "routeros" => Language::RouterOs,
      "rsl" => Language::Rsl,
      "ruby" => Language::Ruby,
      "ruleslanguage" => Language::RulesLanguage,
      "rust" => Language::Rust,
      "scala" => Language::Scala,
      "scheme" => Language::Scheme,
      "scilab" => Language::Scilab,
      "scss" => Language::Scss,
      "shell" => Language::Shell,
      "smali" => Language::Smali,
      "smalltalk" => Language::Smalltalk,
      "standardml" => Language::StandardMl,
      "sqf" => Language::Sqf,
      "sql" => Language::Sql,
      "stan" => Language::Stan,
      "stata" => Language::Stata,
      "step21" => Language::Step21,
      "stylus" => Language::Stylus,
      "subunit" => Language::Subunit,
      "swift" => Language::Swift,
      "taggerscript" => Language::TaggerScript,
      "tap" => Language::Tap,
      "tcl" => Language::Tcl,
      "tex" => Language::Tex,
      "thrift" => Language::Thrift,
      "tp" => Language::Tp,
      "twig" => Language::Twig,
      "typescript" => Language::Typescript,
      "vala" => Language::Vala,
      "vbnet" => Language::VbNet,
      "vbscript" => Language::VbScript,
      "vbscripthtml" => Language::VbScriptHtml,
      "verilog" => Language::Verilog,
      "vhdl" => Language::Vhdl,
      "vim" => Language::Vim,
      "x86asm" => Language::X86Asm,
      "xl" => Language::Xl,
      "xml" => Language::Xml,
      "xquery" => Language::XQuery,
      "yaml" => Language::Yaml,
      "zephir" => Language::Zephir,
      _ => return None,
    };

    Some(lang)
  }

  pub fn hljs(&self) -> &'static str {
    match *self {
      Language::OneC => "1c",
      Language::Abnf => "abnf",
      Language::AccessLog => "accesslog",
      Language::ActionScript => "actionscript",
      Language::Ada => "ada",
      Language::Apache => "apache",
      Language::AppleScript => "applescript",
      Language::Arduino => "arduino",
      Language::ArmAsm => "armasm",
      Language::AsciiDoc => "asciidoc",
      Language::AspectJ => "aspectj",
      Language::AutoHotKey => "autohotkey",
      Language::AutoIt => "autoit",
      Language::AvrAsm => "avrasm",
      Language::Awk => "awk",
      Language::Axapta => "axapta",
      Language::Bash => "bash",
      Language::Basic => "basic",
      Language::Bnf => "bnf",
      Language::Brainfuck => "brainfuck",
      Language::Cal => "cal",
      Language::CapnProto => "capnproto",
      Language::Ceylon => "ceylon",
      Language::Clean => "clean",
      Language::Clojure => "clojure",
      Language::ClojureRepl => "clojure-repl",
      Language::Cmake => "cmake",
      Language::CoffeeScript => "coffeescript",
      Language::Coq => "coq",
      Language::Cos => "cos",
      Language::CPlusPlus => "cpp",
      Language::Crmsh => "crmsh",
      Language::Crystal => "crystal",
      Language::CSharp => "cs",
      Language::Csp => "csp",
      Language::Css => "css",
      Language::D => "d",
      Language::Dart => "dart",
      Language::Delphi => "delphi",
      Language::Diff => "diff",
      Language::Django => "django",
      Language::Dns => "dns",
      Language::Dockerfile => "dockerfile",
      Language::Dos => "dos",
      Language::DsConfig => "dsconfig",
      Language::Dts => "dts",
      Language::Dust => "dust",
      Language::Ebnf => "ebnf",
      Language::Elixir => "elixir",
      Language::Elm => "elm",
      Language::EmbeddedRuby => "erb",
      Language::Erlang => "erlang",
      Language::ErlangRepl => "erlang-repl",
      Language::Excel => "excel",
      Language::Fix => "fix",
      Language::Flix => "flix",
      Language::Fortran => "fortran",
      Language::FSharp => "fsharp",
      Language::Gams => "gams",
      Language::Gauss => "gauss",
      Language::GCode => "gcode",
      Language::Gherkin => "gherkin",
      Language::Glsl => "glsl",
      Language::Go => "go",
      Language::Golo => "golo",
      Language::Gradle => "gradle",
      Language::Groovy => "groovy",
      Language::Haml => "haml",
      Language::Handlebars => "handlebars",
      Language::Haskell => "haskell",
      Language::Haxe => "haxe",
      Language::Hsp => "hsp",
      Language::Htmlbars => "htmlbars",
      Language::Http => "http",
      Language::Hy => "hy",
      Language::Inform7 => "inform7",
      Language::Ini => "ini",
      Language::Irpf90 => "irpf90",
      Language::Java => "java",
      Language::JavaScript => "javascript",
      Language::JbossCli => "jboss-cli",
      Language::Json => "json",
      Language::Julia => "julia",
      Language::JuliaRepl => "julia-repl",
      Language::Kotlin => "kotlin",
      Language::Lasso => "lasso",
      Language::Ldif => "ldif",
      Language::Leaf => "leaf",
      Language::Less => "less",
      Language::Lisp => "lisp",
      Language::LiveCodeServer => "livecodeserver",
      Language::LiveScript => "livescript",
      Language::Llvm => "llvm",
      Language::LindenScriptingLanguage => "lsl",
      Language::Lua => "lua",
      Language::Makefile => "makefile",
      Language::Markdown => "markdown",
      Language::Mathematica => "mathematica",
      Language::Matlab => "matlab",
      Language::Maxima => "maxima",
      Language::Mel => "mel",
      Language::Mercury => "mercury",
      Language::MipsAsm => "mipsasm",
      Language::Mizar => "mizar",
      Language::Mojolicious => "mojolicious",
      Language::Monkey => "monkey",
      Language::MoonScript => "moonscript",
      Language::N1ql => "n1ql",
      Language::Nginx => "nginx",
      Language::Nimrod => "nimrod",
      Language::Nix => "nix",
      Language::Nsis => "nsis",
      Language::ObjectiveC => "objectivec",
      Language::Ocaml => "ocaml",
      Language::OpenScad => "openscad",
      Language::Oxygene => "oxygene",
      Language::Parser3 => "parser3",
      Language::Perl => "perl",
      Language::Pf => "pf",
      Language::Php => "php",
      Language::Pony => "pony",
      Language::PowerShell => "powershell",
      Language::Processing => "processing",
      Language::Profile => "profile",
      Language::Prolog => "prolog",
      Language::ProtocolBuffers => "protobuf",
      Language::Puppet => "puppet",
      Language::PureBasic => "purebasic",
      Language::Python => "python",
      Language::Q => "q",
      Language::Qml => "qml",
      Language::R => "r",
      Language::Rib => "rib",
      Language::Roboconf => "roboconf",
      Language::RouterOs => "routeros",
      Language::Rsl => "rsl",
      Language::Ruby => "ruby",
      Language::RulesLanguage => "ruleslanguage",
      Language::Rust => "rust",
      Language::Scala => "scala",
      Language::Scheme => "scheme",
      Language::Scilab => "scilab",
      Language::Scss => "scss",
      Language::Shell => "shell",
      Language::Smali => "smali",
      Language::Smalltalk => "smalltalk",
      Language::StandardMl => "sml",
      Language::Sqf => "sqf",
      Language::Sql => "sql",
      Language::Stan => "stan",
      Language::Stata => "stata",
      Language::Step21 => "step21",
      Language::Stylus => "stylus",
      Language::Subunit => "subunit",
      Language::Swift => "swift",
      Language::TaggerScript => "taggerscript",
      Language::Tap => "tap",
      Language::Tcl => "tcl",
      Language::Tex => "tex",
      Language::Thrift => "thrift",
      Language::Tp => "tp",
      Language::Twig => "twig",
      Language::Typescript => "typescript",
      Language::Vala => "vala",
      Language::VbNet => "vbnet",
      Language::VbScript => "vbscript",
      Language::VbScriptHtml => "vbscript-html",
      Language::Verilog => "verilog",
      Language::Vhdl => "vhdl",
      Language::Vim => "vim",
      Language::X86Asm => "x86asm",
      Language::Xl => "xl",
      Language::Xml => "xml",
      Language::XQuery => "xquery",
      Language::Yaml => "yaml",
      Language::Zephir => "zephir",
    }
  }

  pub fn from_hljs(input: &str) -> Option<Self> {
    let lang = match input.to_lowercase().as_str() {
      "1c" => Language::OneC,
      "abnf" => Language::Abnf,
      "accesslog" => Language::AccessLog,
      "actionscript" => Language::ActionScript,
      "ada" => Language::Ada,
      "apache" => Language::Apache,
      "applescript" => Language::AppleScript,
      "arduino" => Language::Arduino,
      "armasm" => Language::ArmAsm,
      "asciidoc" => Language::AsciiDoc,
      "aspectj" => Language::AspectJ,
      "autohotkey" => Language::AutoHotKey,
      "autoit" => Language::AutoIt,
      "avrasm" => Language::AvrAsm,
      "awk" => Language::Awk,
      "axapta" => Language::Axapta,
      "bash" => Language::Bash,
      "basic" => Language::Basic,
      "bnf" => Language::Bnf,
      "brainfuck" => Language::Brainfuck,
      "cal" => Language::Cal,
      "capnproto" => Language::CapnProto,
      "ceylon" => Language::Ceylon,
      "clean" => Language::Clean,
      "clojure" => Language::Clojure,
      "clojure-repl" => Language::ClojureRepl,
      "cmake" => Language::Cmake,
      "coffeescript" => Language::CoffeeScript,
      "coq" => Language::Coq,
      "cos" => Language::Cos,
      "cpp" => Language::CPlusPlus,
      "crmsh" => Language::Crmsh,
      "crystal" => Language::Crystal,
      "cs" => Language::CSharp,
      "csp" => Language::Csp,
      "css" => Language::Css,
      "d" => Language::D,
      "dart" => Language::Dart,
      "delphi" => Language::Delphi,
      "diff" => Language::Diff,
      "django" => Language::Django,
      "dns" => Language::Dns,
      "dockerfile" => Language::Dockerfile,
      "dos" => Language::Dos,
      "dsconfig" => Language::DsConfig,
      "dts" => Language::Dts,
      "dust" => Language::Dust,
      "ebnf" => Language::Ebnf,
      "elixir" => Language::Elixir,
      "elm" => Language::Elm,
      "erb" => Language::EmbeddedRuby,
      "erlang" => Language::Erlang,
      "erlang-repl" => Language::ErlangRepl,
      "excel" => Language::Excel,
      "fix" => Language::Fix,
      "flix" => Language::Flix,
      "fortran" => Language::Fortran,
      "fsharp" => Language::FSharp,
      "gams" => Language::Gams,
      "gauss" => Language::Gauss,
      "gcode" => Language::GCode,
      "gherkin" => Language::Gherkin,
      "glsl" => Language::Glsl,
      "go" => Language::Go,
      "golo" => Language::Golo,
      "gradle" => Language::Gradle,
      "groovy" => Language::Groovy,
      "haml" => Language::Haml,
      "handlebars" => Language::Handlebars,
      "haskell" => Language::Haskell,
      "haxe" => Language::Haxe,
      "hsp" => Language::Hsp,
      "htmlbars" => Language::Htmlbars,
      "http" => Language::Http,
      "hy" => Language::Hy,
      "inform7" => Language::Inform7,
      "ini" => Language::Ini,
      "irpf90" => Language::Irpf90,
      "java" => Language::Java,
      "javascript" => Language::JavaScript,
      "jboss-cli" => Language::JbossCli,
      "json" => Language::Json,
      "julia" => Language::Julia,
      "julia-repl" => Language::JuliaRepl,
      "kotlin" => Language::Kotlin,
      "lasso" => Language::Lasso,
      "ldif" => Language::Ldif,
      "leaf" => Language::Leaf,
      "less" => Language::Less,
      "lisp" => Language::Lisp,
      "livecodeserver" => Language::LiveCodeServer,
      "livescript" => Language::LiveScript,
      "llvm" => Language::Llvm,
      "lsl" => Language::LindenScriptingLanguage,
      "lua" => Language::Lua,
      "makefile" => Language::Makefile,
      "markdown" => Language::Markdown,
      "mathematica" => Language::Mathematica,
      "matlab" => Language::Matlab,
      "maxima" => Language::Maxima,
      "mel" => Language::Mel,
      "mercury" => Language::Mercury,
      "mipsasm" => Language::MipsAsm,
      "mizar" => Language::Mizar,
      "mojolicious" => Language::Mojolicious,
      "monkey" => Language::Monkey,
      "moonscript" => Language::MoonScript,
      "n1ql" => Language::N1ql,
      "nginx" => Language::Nginx,
      "nimrod" => Language::Nimrod,
      "nix" => Language::Nix,
      "nsis" => Language::Nsis,
      "objectivec" => Language::ObjectiveC,
      "ocaml" => Language::Ocaml,
      "openscad" => Language::OpenScad,
      "oxygene" => Language::Oxygene,
      "parser3" => Language::Parser3,
      "perl" => Language::Perl,
      "pf" => Language::Pf,
      "php" => Language::Php,
      "pony" => Language::Pony,
      "powershell" => Language::PowerShell,
      "processing" => Language::Processing,
      "profile" => Language::Profile,
      "prolog" => Language::Prolog,
      "protobuf" => Language::ProtocolBuffers,
      "puppet" => Language::Puppet,
      "purebasic" => Language::PureBasic,
      "python" => Language::Python,
      "q" => Language::Q,
      "qml" => Language::Qml,
      "r" => Language::R,
      "rib" => Language::Rib,
      "roboconf" => Language::Roboconf,
      "routeros" => Language::RouterOs,
      "rsl" => Language::Rsl,
      "ruby" => Language::Ruby,
      "ruleslanguage" => Language::RulesLanguage,
      "rust" => Language::Rust,
      "scala" => Language::Scala,
      "scheme" => Language::Scheme,
      "scilab" => Language::Scilab,
      "scss" => Language::Scss,
      "shell" => Language::Shell,
      "smali" => Language::Smali,
      "smalltalk" => Language::Smalltalk,
      "sml" => Language::StandardMl,
      "sqf" => Language::Sqf,
      "sql" => Language::Sql,
      "stan" => Language::Stan,
      "stata" => Language::Stata,
      "step21" => Language::Step21,
      "stylus" => Language::Stylus,
      "subunit" => Language::Subunit,
      "swift" => Language::Swift,
      "taggerscript" => Language::TaggerScript,
      "tap" => Language::Tap,
      "tcl" => Language::Tcl,
      "tex" => Language::Tex,
      "thrift" => Language::Thrift,
      "tp" => Language::Tp,
      "twig" => Language::Twig,
      "typescript" => Language::Typescript,
      "vala" => Language::Vala,
      "vbnet" => Language::VbNet,
      "vbscript" => Language::VbScript,
      "vbscript-html" => Language::VbScriptHtml,
      "verilog" => Language::Verilog,
      "vhdl" => Language::Vhdl,
      "vim" => Language::Vim,
      "x86asm" => Language::X86Asm,
      "xl" => Language::Xl,
      "xml" => Language::Xml,
      "xquery" => Language::XQuery,
      "yaml" => Language::Yaml,
      "zephir" => Language::Zephir,
      _ => return None,
    };

    return Some(lang);
  }

  pub fn pretty(&self) -> &'static str {
    match *self {
      Language::OneC => "1c",
      Language::Abnf => "ABNF",
      Language::AccessLog => "AccessLog",
      Language::ActionScript => "ActionScript",
      Language::Ada => "Ada",
      Language::Apache => "Apache",
      Language::AppleScript => "AppleScript",
      Language::Arduino => "Arduino",
      Language::ArmAsm => "ARMASM",
      Language::AsciiDoc => "AsciiDoc",
      Language::AspectJ => "AspectJ",
      Language::AutoHotKey => "AutoHotKey",
      Language::AutoIt => "AutoIt",
      Language::AvrAsm => "AVRASM",
      Language::Awk => "Awk",
      Language::Axapta => "Axapta",
      Language::Bash => "Bash",
      Language::Basic => "Basic",
      Language::Bnf => "BNF",
      Language::Brainfuck => "Brainfuck",
      Language::Cal => "CAL",
      Language::CapnProto => "Cap'n Proto",
      Language::Ceylon => "Ceylon",
      Language::Clean => "Clean",
      Language::Clojure => "Clojure",
      Language::ClojureRepl => "Clojure REPL",
      Language::Cmake => "CMake",
      Language::CoffeeScript => "CoffeeScript",
      Language::Coq => "Coq",
      Language::Cos => "Cos",
      Language::CPlusPlus => "C++",
      Language::Crmsh => "crmsh",
      Language::Crystal => "Crystal",
      Language::CSharp => "C#",
      Language::Csp => "CSP",
      Language::Css => "CSS",
      Language::D => "D",
      Language::Dart => "Dart",
      Language::Delphi => "Delphi",
      Language::Diff => "Diff",
      Language::Django => "Django",
      Language::Dns => "DNS",
      Language::Dockerfile => "Dockerfile",
      Language::Dos => "DOS",
      Language::DsConfig => "DSConfig",
      Language::Dts => "DTS",
      Language::Dust => "Dust",
      Language::Ebnf => "EBNF",
      Language::Elixir => "Elixir",
      Language::Elm => "Elm",
      Language::EmbeddedRuby => "Embedded Ruby",
      Language::Erlang => "Erlang",
      Language::ErlangRepl => "Erlang REPL",
      Language::Excel => "Excel",
      Language::Fix => "Fix",
      Language::Flix => "Flix",
      Language::Fortran => "FORTRAN",
      Language::FSharp => "F#",
      Language::Gams => "GAMS",
      Language::Gauss => "Gauss",
      Language::GCode => "G-code",
      Language::Gherkin => "Gherkin",
      Language::Glsl => "GLSL",
      Language::Go => "Go",
      Language::Golo => "Golo",
      Language::Gradle => "Gradle",
      Language::Groovy => "Groovy",
      Language::Haml => "HAML",
      Language::Handlebars => "Handlebars",
      Language::Haskell => "Haskell",
      Language::Haxe => "Haxe",
      Language::Hsp => "HSP",
      Language::Htmlbars => "HTMLbars",
      Language::Http => "HTTP",
      Language::Hy => "Hy",
      Language::Inform7 => "Inform 7",
      Language::Ini => "INI",
      Language::Irpf90 => "IRPF90",
      Language::Java => "Java",
      Language::JavaScript => "JavaScript",
      Language::JbossCli => "JBoss CLI",
      Language::Json => "JSON",
      Language::Julia => "Julia",
      Language::JuliaRepl => "Julia REPL",
      Language::Kotlin => "Kotlin",
      Language::Lasso => "Lasso",
      Language::Ldif => "LDIF",
      Language::Leaf => "Leaf",
      Language::Less => "Less",
      Language::Lisp => "Lisp",
      Language::LiveCodeServer => "LiveCode Server",
      Language::LiveScript => "LiveScript",
      Language::Llvm => "LLVM",
      Language::LindenScriptingLanguage => "Linden Scripting Language",
      Language::Lua => "Lua",
      Language::Makefile => "Makefile",
      Language::Markdown => "Markdown",
      Language::Mathematica => "Mathematica",
      Language::Matlab => "MATLAB",
      Language::Maxima => "Maxima",
      Language::Mel => "Mel",
      Language::Mercury => "Mercury",
      Language::MipsAsm => "MIPSASM",
      Language::Mizar => "Mizar",
      Language::Mojolicious => "Mojolicious",
      Language::Monkey => "Monkey",
      Language::MoonScript => "MoonScript",
      Language::N1ql => "N1QL",
      Language::Nginx => "nginx",
      Language::Nimrod => "Nimrod",
      Language::Nix => "nix",
      Language::Nsis => "NSIS",
      Language::ObjectiveC => "Objective-C",
      Language::Ocaml => "OCaml",
      Language::OpenScad => "OpenSCAD",
      Language::Oxygene => "Oxygene",
      Language::Parser3 => "Parser 3",
      Language::Perl => "Perl",
      Language::Pf => "PF",
      Language::Php => "PHP",
      Language::Pony => "Pony",
      Language::PowerShell => "PowerShell",
      Language::Processing => "Processing",
      Language::Profile => "Profile",
      Language::Prolog => "Prolog",
      Language::ProtocolBuffers => "Protocol Buffers",
      Language::Puppet => "Puppet",
      Language::PureBasic => "PureBasic",
      Language::Python => "Python",
      Language::Q => "Q",
      Language::Qml => "QML",
      Language::R => "R",
      Language::Rib => "Rib",
      Language::Roboconf => "Roboconf",
      Language::RouterOs => "RouterOS",
      Language::Rsl => "RSL",
      Language::Ruby => "Ruby",
      Language::RulesLanguage => "Rules Language",
      Language::Rust => "Rust",
      Language::Scala => "Scala",
      Language::Scheme => "Scheme",
      Language::Scilab => "Scilab",
      Language::Scss => "SCSS",
      Language::Shell => "Shell",
      Language::Smali => "Smali",
      Language::Smalltalk => "Smalltalk",
      Language::StandardMl => "Standard ML",
      Language::Sqf => "SQF",
      Language::Sql => "SQL",
      Language::Stan => "Stan",
      Language::Stata => "Stata",
      Language::Step21 => "STEP21",
      Language::Stylus => "Stylus",
      Language::Subunit => "Subunit",
      Language::Swift => "Swift",
      Language::TaggerScript => "TaggerScript",
      Language::Tap => "Tap",
      Language::Tcl => "Tcl",
      Language::Tex => "TeX",
      Language::Thrift => "Thrift",
      Language::Tp => "TP",
      Language::Twig => "Twig",
      Language::Typescript => "TypeScript",
      Language::Vala => "Vala",
      Language::VbNet => "VB.NET",
      Language::VbScript => "VBScript",
      Language::VbScriptHtml => "VBScript HTML",
      Language::Verilog => "Verilog",
      Language::Vhdl => "VHDL",
      Language::Vim => "Vim",
      Language::X86Asm => "X86ASM",
      Language::Xl => "XL",
      Language::Xml => "XML",
      Language::XQuery => "XQuery",
      Language::Yaml => "YAML",
      Language::Zephir => "Zephir",
    }
  }

  pub fn from_pretty(input: &str) -> Option<Self> {
    let lang = match input.to_lowercase().as_str() {
      "1c" => Language::OneC,
      "abnf" => Language::Abnf,
      "accesslog" => Language::AccessLog,
      "actionscript" => Language::ActionScript,
      "ada" => Language::Ada,
      "apache" => Language::Apache,
      "applescript" => Language::AppleScript,
      "arduino" => Language::Arduino,
      "armasm" => Language::ArmAsm,
      "asciidoc" => Language::AsciiDoc,
      "aspectj" => Language::AspectJ,
      "autohotkey" => Language::AutoHotKey,
      "autoit" => Language::AutoIt,
      "avrasm" => Language::AvrAsm,
      "awk" => Language::Awk,
      "axapta" => Language::Axapta,
      "bash" => Language::Bash,
      "basic" => Language::Basic,
      "bnf" => Language::Bnf,
      "brainfuck" => Language::Brainfuck,
      "cal" => Language::Cal,
      "cap'n proto" => Language::CapnProto,
      "ceylon" => Language::Ceylon,
      "clean" => Language::Clean,
      "clojure" => Language::Clojure,
      "clojure repl" => Language::ClojureRepl,
      "cmake" => Language::Cmake,
      "coffeescript" => Language::CoffeeScript,
      "coq" => Language::Coq,
      "cos" => Language::Cos,
      "c++" => Language::CPlusPlus,
      "crmsh" => Language::Crmsh,
      "crystal" => Language::Crystal,
      "c#" => Language::CSharp,
      "csp" => Language::Csp,
      "css" => Language::Css,
      "d" => Language::D,
      "dart" => Language::Dart,
      "delphi" => Language::Delphi,
      "diff" => Language::Diff,
      "django" => Language::Django,
      "dns" => Language::Dns,
      "dockerfile" => Language::Dockerfile,
      "dos" => Language::Dos,
      "dsconfig" => Language::DsConfig,
      "dts" => Language::Dts,
      "dust" => Language::Dust,
      "ebnf" => Language::Ebnf,
      "elixir" => Language::Elixir,
      "elm" => Language::Elm,
      "embedded ruby" => Language::EmbeddedRuby,
      "erlang" => Language::Erlang,
      "erlang repl" => Language::ErlangRepl,
      "excel" => Language::Excel,
      "fix" => Language::Fix,
      "flix" => Language::Flix,
      "fortran" => Language::Fortran,
      "f#" => Language::FSharp,
      "gams" => Language::Gams,
      "gauss" => Language::Gauss,
      "g-code" => Language::GCode,
      "gherkin" => Language::Gherkin,
      "glsl" => Language::Glsl,
      "go" => Language::Go,
      "golo" => Language::Golo,
      "gradle" => Language::Gradle,
      "groovy" => Language::Groovy,
      "haml" => Language::Haml,
      "handlebars" => Language::Handlebars,
      "haskell" => Language::Haskell,
      "haxe" => Language::Haxe,
      "hsp" => Language::Hsp,
      "htmlbars" => Language::Htmlbars,
      "http" => Language::Http,
      "hy" => Language::Hy,
      "inform 7" => Language::Inform7,
      "ini" => Language::Ini,
      "irpf90" => Language::Irpf90,
      "java" => Language::Java,
      "javascript" => Language::JavaScript,
      "jboss cli" => Language::JbossCli,
      "json" => Language::Json,
      "julia" => Language::Julia,
      "julia repl" => Language::JuliaRepl,
      "kotlin" => Language::Kotlin,
      "lasso" => Language::Lasso,
      "ldif" => Language::Ldif,
      "leaf" => Language::Leaf,
      "less" => Language::Less,
      "lisp" => Language::Lisp,
      "livecode server" => Language::LiveCodeServer,
      "livescript" => Language::LiveScript,
      "llvm" => Language::Llvm,
      "linden scripting language" => Language::LindenScriptingLanguage,
      "lua" => Language::Lua,
      "makefile" => Language::Makefile,
      "markdown" => Language::Markdown,
      "mathematica" => Language::Mathematica,
      "matlab" => Language::Matlab,
      "maxima" => Language::Maxima,
      "mel" => Language::Mel,
      "mercury" => Language::Mercury,
      "mipsasm" => Language::MipsAsm,
      "mizar" => Language::Mizar,
      "mojolicious" => Language::Mojolicious,
      "monkey" => Language::Monkey,
      "moonscript" => Language::MoonScript,
      "n1ql" => Language::N1ql,
      "nginx" => Language::Nginx,
      "nimrod" => Language::Nimrod,
      "nix" => Language::Nix,
      "nsis" => Language::Nsis,
      "objective-c" => Language::ObjectiveC,
      "ocaml" => Language::Ocaml,
      "openscad" => Language::OpenScad,
      "oxygene" => Language::Oxygene,
      "parser 3" => Language::Parser3,
      "perl" => Language::Perl,
      "pf" => Language::Pf,
      "php" => Language::Php,
      "pony" => Language::Pony,
      "powershell" => Language::PowerShell,
      "processing" => Language::Processing,
      "profile" => Language::Profile,
      "prolog" => Language::Prolog,
      "protocol buffers" => Language::ProtocolBuffers,
      "puppet" => Language::Puppet,
      "purebasic" => Language::PureBasic,
      "python" => Language::Python,
      "q" => Language::Q,
      "qml" => Language::Qml,
      "r" => Language::R,
      "rib" => Language::Rib,
      "roboconf" => Language::Roboconf,
      "routeros" => Language::RouterOs,
      "rsl" => Language::Rsl,
      "ruby" => Language::Ruby,
      "rules language" => Language::RulesLanguage,
      "rust" => Language::Rust,
      "scala" => Language::Scala,
      "scheme" => Language::Scheme,
      "scilab" => Language::Scilab,
      "scss" => Language::Scss,
      "shell" => Language::Shell,
      "smali" => Language::Smali,
      "smalltalk" => Language::Smalltalk,
      "standard ml" => Language::StandardMl,
      "sqf" => Language::Sqf,
      "sql" => Language::Sql,
      "stan" => Language::Stan,
      "stata" => Language::Stata,
      "step21" => Language::Step21,
      "stylus" => Language::Stylus,
      "subunit" => Language::Subunit,
      "swift" => Language::Swift,
      "taggerscript" => Language::TaggerScript,
      "tap" => Language::Tap,
      "tcl" => Language::Tcl,
      "tex" => Language::Tex,
      "thrift" => Language::Thrift,
      "tp" => Language::Tp,
      "twig" => Language::Twig,
      "typescript" => Language::Typescript,
      "vala" => Language::Vala,
      "vb.net" => Language::VbNet,
      "vbscript" => Language::VbScript,
      "vbscript html" => Language::VbScriptHtml,
      "verilog" => Language::Verilog,
      "vhdl" => Language::Vhdl,
      "vim" => Language::Vim,
      "x86asm" => Language::X86Asm,
      "xl" => Language::Xl,
      "xml" => Language::Xml,
      "xquery" => Language::XQuery,
      "yaml" => Language::Yaml,
      "zephir" => Language::Zephir,
      _ => return None,
    };

    return Some(lang);
  }

  pub fn context() -> Vec<(String, &'static str, &'static str)> {
    Language::ALL
    .iter()
    .map(|x| (x.as_str().to_lowercase(), x.pretty(), x.hljs()))
    .collect()
  }
}

impl<DB: Backend<RawValue = [u8]>> Queryable<Text, DB> for Language {
  type Row = String;

  fn build(row: Self::Row) -> Self {
    Language::from_str(&row).expect("invalid language in database")
  }
}

impl<DB: Backend> ToSql<Text, DB> for Language {
  fn to_sql<W: Write>(&self, out: &mut serialize::Output<W, DB>) -> serialize::Result {
    <str as ToSql<Text, DB>>::to_sql(self.as_str(), out)
  }
}

impl<DB: Backend<RawValue = [u8]>> FromSql<Text, DB> for Language {
  fn from_sql(bytes: Option<&DB::RawValue>) -> deserialize::Result<Self> {
    let input = <String as FromSql<Text, DB>>::from_sql(bytes)?;
    match Language::from_str(&input) {
      Some(l) => Ok(l),
      None => Err(Box::new(format_err!("bad language enum: {}", input).compat())),
    }
  }
}

impl<'v> FromFormValue<'v> for Language {
    type Error = &'v RawStr;

    fn from_form_value(form_value: &'v RawStr) -> Result<Self, Self::Error> {
      Language::from_str(form_value.as_str()).ok_or_else(|| form_value)
    }

    fn default() -> Option<Self> {
      None
    }
}
